【0】驱动的安排：
    第一天：模块的框架，字符设备的框架
	第二天：字符设备的模型
	第三天：io模型，内核并发控制，内核内存管理
	第四天：内核内存访问，platform总线控制

	后四天：必须掌握的是gpio，led，按键，pwm
	beep，定时器消抖，中断，platform总线，
	基于platform总线驱动的编写，adc电压的采集，i2c驱动的编写，lm75驱动，spi总线


	了解：块设备和网络设备


【1】模块：
     可以不依赖于内核独立存在的代码，不能独立运行，可以自动的加载到内核，可以自动卸载。
【2】模块和应用程序的区别
    		 		 模块                     应用程序
	入口函数：     加载函数                main函数
	函数的调用：   内核的函数              /usr/include    /lib
	运行空间：     内核空间                用户的空间
	资源的释放     手动释放资源            自动释放和手动释放         
【3】编译模块的好处：
	可以手动的加载模块，减少内核的体积，减少内核启动的时间
	灵活
	高效

	缺点：版本不兼容

【4】编写第一个应用程序
    编写模块的三大要素
 	1.入口函数（加载函数）
	默认的加载函数
	init_module()//内核里面定义的函数，应用的main函数的功能一样的
    返回值：int类型
	参数：void类型
	__init
	__exit

	在编译模块的时候不起作用，在运行的时候如果加__init ,
	它会把这个函数加载到init段
	__exit  不起作用


	自定义加载函数

	定义的函数和默认的加载是同类型的函数，参数的类型一致
	module_init
	2.卸载函数
	
	默认的卸载函数
	cleanup_module
	返回值：void
    参数：void

	自定义卸载函数

	定义的函数和默认的卸载函数是同类型的函数，参数的类型一致
	moudle_exit
	3.模块的申明
	MODULE_LICENSE("GPL");
【5】内部编译和外部编译的区别
	内部编译：在内核的源码目录下编译
	          hello.c  加入到Makefile   obj-m=hello.o
	外部编译：在内核的源码目录外编译
	          hello.c  加入到Makefile  obj-m =hello.o
【6】ubuntu内核的源码目录
   /lib/modules/3.2.0-24-generic/build 
   查看内核的版本号
   uname  -r
   查看cpu的信息
   cat   /procinfo
【7】命令的使用
	模块的文件名  *.ko 
	模块的名字  *

	加载模块的命令：
	  insmod  模块的文件名  
	  insert  module

	  sudo   insmod  hello.ko
	  卸载模块的命令：
	  rmmod   模块的名字 
	   rmmod  hello


	   查看内核的打印信息
	   dmesg  

	   清除内核的打印信息
	  sudo  dmesg  -c
     查看模块
	 lsmod 

	 查看模块的信息

	 modinfo
	注意：模块不能重名

【8】编译模块的条件
    1.已经编译过的内核
	2.已经配置过的内核
【9】
	printk使用使用的头文件  linux/kernel.h
	MODULE_LICENSE 使用的头文件   linux/moudle.h

【10】模块的传参
	module_param(name,type,perm);
	 name:参数的名字
	 type：参数的类型 
	 perm：参数的读写权限

	 int  var  = 123；
	 unsigned int       uint
	 char  *            charp
	 long              long
	 unsigned short     ushort
	 unsigned long     ulong
	 bool               bool


	 2.让模块内部变量的名字和加载函数的名字不同
	 函数的原型：
	 module_param_named
    参数：
	   out_name:加载函数的名字
		in_name:模块内部变量的名字
		type：参数的类型
		perm：权限
	3.参数传递到数组中
	module_param_array(array,int,&len,0400);
	insmod  hello.ko  array=1,2,3

	int array[len];
	参数：name：模块的数组名，也就是外部传递的名字
	      type：类型
		  nump：加载模块时传递的参数的个数
		  perm：权限

	4.符号导出
	   导出全局变量

	   EXPORT_SYMBOL();
	  





	
