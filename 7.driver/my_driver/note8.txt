【1】基于platform  总线驱动的编写   （adc）

1.添加adc平台代码
     arch/arm/mach-s5pc100/mach-smdkc100.c


2.编写驱动
   1.实现platform_driver

      static  struct   platform_driver   s5pc100_adc  = {
	  
		  .driver.name= "s5pc100-adc",
		  .probe  =  s5pc100_probe,
		  .remove = s5pc100_remove,
	  
	  };

  2.实现 probe函数
    
  int s5pc100_adc (struct platform_device  *pdev)
    i.寄存器的映射
	   adccon  =
	 //  ioremap(0xf3000000,0x30);xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	   //ioremap(pdev->resource[0].start,pdev->resource[0].end-pdev->resource[0].start);v错错错错错错
	ii.获取资源

	struct resource  * platform_get_resource(struct platform_device
			*dev,unsigned int type,unsigned  int  num);

	struct resource  *memres =
	platform_get_resource(pdev,IORESOURCE_MEM,0);//从pdev中获取第num个类型为type的资源
	struct resource  *irqres = platform_get_resource(pdev,IORESOURCE_IRQ,0);

	判断资源是否合法

	 if(memres  || irqres     ==  null)
	｛
	
		return -ENOMEM;

	｝


	adccon  = ioremap(memres_->start,memres->end-memres->start);
	if(adccon  ==  null)
	{
	
	}

    request_irq(irqres->start,adc_handler,DIALED,"ADC");
	判断返回值


