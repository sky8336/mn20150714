模块---------->驱动

静态申请设备号的过程：

在加载函数中：
1.获得一个设备号：dev_t devno=MKDEV(主设备号，次设备号)   (12位，20位)
2.静态申请设备号：(常用，设备号固定，但不一定能申请成功)
  register_chrdev_region(设备号dev，该类型设备的个数(一般为1)，设备的名字(如"hello"))
函数的返回值：成功返回0，失败返回一个负的错误码号
注：设备的名字与lsmod查看到的模块的名字无关，这个名字查看时用：cat/proc/devices，可显示出申请到的设备号和设备的名字，该设备一旦申请成功，如不rmmod，则一直从在

在卸载模块中：
1.重新获得申请过的设备号，因为申请时在加载模块中，为局部可见，故要重新获得
2.释放设备号：unregister_chrdev_region(设备号devno，该类型设备的个数)



动态申请设备号的过程：

在加载函数中：
1.定义一个dev_t devno用于接收动态申请到的设备号
2.动态申请设备号：(不常用，设备号可变，很大程度上能申请成功)
  alloc_chrdev_region(存放申请到设备号的变量(用指针传入 即 &devno)，要申请的第一个次设备号 需静态指定，总共申请多少个这种类型的设备 一般为1，设备的名字如"mahongwei")
申请到号以后可以提取到其主设备号：hello_major=MAJOR(devno)  MAJOR的实现过程是将devno左移20位

在卸载函数中：
因为已经获得了主设备号，次设备号和设备个数已经自己指定，故在释放设备号时可按静态申请的方法释放，释放函数只有一个

